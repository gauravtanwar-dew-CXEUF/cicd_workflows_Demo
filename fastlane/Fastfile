default_platform(:android)

platform :android do
  lane :build_debug do
    gradle(task: "assembleDebug")
  end

  lane :run_tests do
    gradle(task: "testDebug")
  end

  lane :lint_check do
    gradle(task: "lint")
  end

  lane :release_build do
    gradle(task: "assembleRelease")
  end

  lane :all_in_one do
    build_debug
    run_tests
    lint_check
    release_build
  end

  lane :upload_to_custom_server do
    UI.message("Uploading APK to Custom Server")

    # Path to the APK
    apk_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]

    # Set your API endpoint URL
    api_url = "https://deploy.dewapps.com/api/uploadBuild"

    # Set Basic Authentication headers
    headers = {
      "Authorization" => "Basic " + Base64.strict_encode64("upload-admin:bUild@uPloAD"),
      "Content-Type" => "multipart/form-data; boundary=<calculated when request is sent>",
      "Content-Length" => "<calculated when request is sent>",
      "Host" => "<calculated when request is sent>",
      "User-Agent" => "PostmanRuntime/7.32.3",
      "Accept" =>"*/*",
      "Accept-Encoding" => "gzip, deflate, br",
      "Connection" => "keep-alive"
    }

    body_params = {
      "projects" => "1:::Test2",
      "envs" => "QA",
      "platforms" => "ANDROID",
      "buildVersion" => "1.0.0",
      "buildNo" => "1",
      "bundleId" => "1",
      "changeset" => "Test CS",
      "codebranch" => "Test CB",
      "comments" => "Test CM"
    }

    # Convert body parameters to JSON string
    request_body = body_params.to_json

    # Use curl to upload the APK and send JSON data to the server
    response = sh("curl -X POST -H '#{headers.map { |k, v| "#{k}: #{v}" }.join("' -H '")}' -H 'Content-Type: application/json' -d '#{request_body}' -F file=@'#{apk_path}' '#{api_url}'", print_command: false, print_command_output: false).strip
    UI.message("API Response:\n#{response}")


  end


end




# platform :android do
#
#   lane :build_debug do
#     gradle(task: "assembleDebug")
#   end
#
#   lane :run_tests do
#     gradle(task: "testDebug")
#   end
#
#   lane :lint_check do
#     gradle(task: "lint")
#   end
#
#
#
# end
