name: Build Test Deploy CI/CD Sample

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Add linting step using the github/super-linter action
    - name: Lint Android App
      uses: github/super-linter@v3
      with:
        # Specify the GitHub token for accessing private repositories (optional if the repository is public)
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Exclude other file types and only perform Android app linting
        excluded_linters: |
          ansible-lint
          cfn-lint
          markdownlint
          eslint
          hadolint
          php-cs-fixer
          psscriptanalyzer
          stylelint
        # Add additional Android linting commands here (e.g., lintDebug, lintRelease, etc.)
        lint_commands: |
          ./gradlew lintDebug
          ./gradlew lintRelease

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

    - name: Build with Gradle
      uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629

    - name: Run Unit Tests
      run: ./gradlew test

    - name: Archive APK
      uses: actions/upload-artifact@v3
      with:
        name: sample_debug-apk
        path: app/build/outputs/apk/debug/*.apk
