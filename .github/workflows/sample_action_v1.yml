name: Sample Action For CI/CD Workflow

on:
  push:
    branches:
      - regreesion_test_v2

permissions: write-all

jobs:
  # Job for building, testing, and deploying APK
  build-test-deploy:
    name: Build, Test, and Deploy APK
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Step 4: Build Debug APK
    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    # Step 5: Validate Gradle wrapper
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      
    # Step 6: Build with Gradle
    - name: Build with Gradle
      uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629

    # Step 7: Run Unit Tests
    - name: Run Unit Tests
      run: ./gradlew test

    # Step 8: Archive APK
    - name: Archive APK
      uses: actions/upload-artifact@v3
      with:
        name: sample_debug-apk
        path: app/build/outputs/apk/debug/*.apk

  # Job to sync branches
  sync-branch:
    runs-on: ubuntu-latest
    needs: build-test-deploy

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Merge regreesion_test_v2 -> production_sample_branch_v1
    - name: Merge regreesion_test_v2 -> production_sample_branch_v1
      uses: devmasx/merge-branch@master
      with:
        type: now
        from_branch: regreesion_test_v2
        target_branch: production_sample_branch_v1
        github_token: ${{ secrets.GITHUB_TOKEN }}

