name: Sample Action For CI/CD Workflow

on:
  push:
    branches:
      - main
      
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build Debug APK
      run: ./gradlew assembleDebug
      
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629

    - name: Run Unit Tests
      run: ./gradlew test

    - name: Archive APK
      uses: actions/upload-artifact@v3
      with:
        name: sample_debug-apk
        path: app/build/outputs/apk/debug/*.apk

  update-production:
    name: Update Production Sample Branch
    runs-on: ubuntu-latest

    needs: build-test-deploy

    steps:
    - name: Checkout production Sample branch
      uses: actions/checkout@v3
      with:
        ref: production_sample_branch
        path: https://github.com/gauravtanwar-dew-CXEUF/cicd_workflows_Demo/tree/production_sample_branch  # The path where the branch will be checked out

    - name: Merge regreesion_test_v1 into production_sample_branch
      run: |
        cd production_sample_branch  # Change directory to the checked-out production branch
        git merge regreesion_test_v1 -merged after test  # Merge changes from regreesion_test_v1 into the production_sample_branch

    - name: Push changes
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const github = require('@actions/github');
          const context = github.context;
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);

          // Push changes to the production_branch
          await octokit.git.updateRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'heads/production_branch',
            sha: context.sha
          });
