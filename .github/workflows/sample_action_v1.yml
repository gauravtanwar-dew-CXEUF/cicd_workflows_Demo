name: Sample Action For CI/CD Workflow

on:
  push:
    branches:
      - main # Trigger this workflow on push events to the main branch
  pull_request:
    branches:
      - main # Trigger this workflow on pull requests targeting the main branch

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      # This action checks out the code from the repository.

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
      # This action sets up JDK 17 to build a Java-based project.

    - name: Install dependencies
      run: npm install
      # This action installs project dependencies (for Node.js-based projects).

    - name: Build
      run: ./gradlew build
      # This action builds the project (for Gradle-based projects).

    - name: Run Unit Tests
      run: npm test
      # This action runs unit tests (for Node.js-based projects).

    - name: Run Android Tests
      run: ./gradlew test
      # This action runs Android tests (for Android projects).
      
    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Archive APK
      uses: actions/upload-artifact@v3
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
      # This action archives the built APK, making it available for future steps and workflows.

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    needs: build
    # This job depends on the 'build' job, ensuring that 'deploy' runs only after 'build' is successful.

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Dropbox
      run: |
        ACCESS_TOKEN="sl.BjPpetrLAdauQTMDGx9RCbeRF-qwYetWCOcBts1jt7G4Q6pEQgUQ7Nm_xUNXVLx2uAB0TGPGdZW86iP1pnT2KrpjnvLoEswjIf8ciDeorVmk3anfx1CZC-b4QQdj1d5iVWZ9k9Juo5mC"
        UPLOAD_PATH="https://www.dropbox.com/home/Apps/CI_CD%20Production%20Server%20Sample"  # Replace with your desired folder in Dropbox

        # Install Dropbox-Uploader (Assuming you have it set up on your server)
        curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o /usr/local/bin/dropbox_uploader.sh
        chmod +x /usr/local/bin/dropbox_uploader.sh

        # Copy production files to a temporary directory
        mkdir -p tmp
        cp -R production_folder/* tmp/

        # Upload files to Dropbox using Dropbox-Uploader
        /usr/local/bin/dropbox_uploader.sh -s -f /path/to/.dropbox_uploader upload tmp/* "$UPLOAD_PATH"

    - name: Update Other Branch
      run: |
        # Replace the following commands with the commands to update the other branch
        git checkout production_branch  # Replace with the name of the other branch
        git merge main --no-commit  # Merge changes from main into the other branch
        # Replace the following command with the command to push changes to the other branch
        git push origin production_branch  # Replace with the name of the other branch
